# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy
permissions:
  contents: write

on:
  release:
    types: [created]
env:
  NUGET_DIR: ./packages
  TEST_SOLUTION: Nerdolando.Bff-Testing.sln

jobs:
  generating-version:
    runs-on: ubuntu-latest
    outputs:
      generated-version: ${{ steps.version_step.outputs.version }} 

    steps:
      - name: Set VERSION variable from tag
        id: version_step
        run: echo "version=${GITHUB_REF/refs\/tags\/v/}" >> "$GITHUB_OUTPUT"

  build-test:
    runs-on: ubuntu-22.04
    needs: generating-version
    env: 
      VERSION: ${{ needs.generating-version.outputs.generated-version }}
    strategy:
      matrix:
        dotnet-version: [ '8.0.x', '9.0.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
        
      - name: Build projects
        run: dotnet build "./${{ env.TEST_SOLUTION }}" -c "Release" /p:AssemblyVersion=${{ env.VERSION }} /p:InformationalVersion=${{ env.VERSION }}

      - name: Test
        run: dotnet test "./${{ env.TEST_SOLUTION }}" --verbosity normal

      - name: Pack projects
        run: dotnet pack "./${{ env.TEST_SOLUTION }}" -o "${{ env.NUGET_DIR }}" -c "Release" --version-suffix "${{ env.VERSION }}" --no-build --no-restore --include-symbols --include-source
        
      - name: Uploading artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: packages-artifact
          path: ${{ env.NUGET_DIR }}
          retention-days: 1
          overwrite: true          
          
  deploy:
    needs: ['build-test', 'generating-version']
    runs-on: ubuntu-22.04

    steps:
    - name: Downloading build artifact
      uses: actions/download-artifact@v5.0.0
      with:
        name: packages-artifact
        merge-multiple: true
        path: ${{ env.NUGET_DIR }}
    - run: ls -R
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Publish packages
      shell: pwsh
      run: |
            foreach($file in (Get-ChildItem "${{ env.NUGET_DIR }}")) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
            }
  cleanup:
    runs-on: ubuntu-22.04
    needs: deploy
    steps:
      - name: Delete artifacts
        uses: GeekyEggo/delete-artifact@v5.1.0
        with:
          name: packages-artifact

